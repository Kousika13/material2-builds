{"version":3,"file":"material-tabs.umd.min.js","sources":["../../src/lib/tabs/tabs-module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/tabs/ink-bar.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\nimport {A11yModule} from '@angular/cdk/a11y';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone} from '@angular/core';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabContent} from './tab-content';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nexport class MatTabBase {}\nexport const _MatTabMixinBase = mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef}) _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the label changes. */\n  readonly _labelChange = new Subject<void>();\n\n  /** Emits whenever the disable changes */\n  readonly _disableChange = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel')) {\n      this._labelChange.next();\n    }\n\n    if (changes.hasOwnProperty('disabled')) {\n      this._disableChange.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._disableChange.complete();\n    this._labelChange.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Animations used by the Material tabs. */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(componentFactoryResolver, viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  },\n})\nexport class MatTabBody implements OnInit {\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  _position: MatTabBodyPositionState;\n\n  /** The origin position from which this tab should appear when it is centered into view. */\n  @Input()\n  set origin(origin: number) {\n    if (origin == null) { return; }\n\n    const dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n  _origin: MatTabBodyOriginState;\n\n  constructor(private _elementRef: ElementRef,\n              @Optional() private _dir: Directionality) { }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n\n  _onTranslateTabStarted(e: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(e.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  _onTranslateTabComplete(e: AnimationEvent): void {\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this._onCentered.emit();\n    }\n\n    if (this._isCenterPosition(e.fromState) && !this._isCenterPosition(this._position)) {\n      this._afterLeavingCenter.emit();\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nexport class MatTabLabelWrapperBase {}\nexport const _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, HOME, SPACE} from '@angular/cdk/keycodes';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisableRipple, mixinDisableRipple} from '@angular/material/core';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to MatTabHeader.\n/** @docs-private */\nexport class MatTabHeaderBase {}\nexport const _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\n\n  @ContentChildren(MatTabLabelWrapper) _labelWrappers: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer') _tabListContainer: ElementRef;\n  @ViewChild('tabList') _tabList: ElementRef;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Combines listeners that will re-align the ink bar whenever they're invoked. */\n  private _realignInkBar = Subscription.EMPTY;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatTabLabelWrapper>;\n\n  private _selectedIndex: number = 0;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n\n  /** Event emitted when the option is selected. */\n  @Output() readonly selectFocusedIndex = new EventEmitter();\n\n  /** Event emitted when a label is focused. */\n  @Output() readonly indexFocused = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality) {\n    super();\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this._updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Aligns the ink bar to the selected tab on load.\n   */\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._labelWrappers)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItemIndex(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    this._realignInkBar = merge(dirChange, resize).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n  }\n\n  ngOnDestroy() {\n    this._realignInkBar.unsubscribe();\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    this._updatePagination();\n    this._alignInkBarToSelectedTab();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Updating the view whether pagination should be enabled or not\n   */\n  _updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex == value || !this._keyManager) { return; }\n\n    this._keyManager.setActiveItem(value);\n    this.indexFocused.emit(value);\n    this._setTabFocus(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._labelWrappers) { return true; }\n\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    this._tabList.nativeElement.style.transform = `translate3d(${translateX}px, 0, 0)`;\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(scrollDir: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n        null;\n\n    this._inkBar.alignToElement(selectedLabelWrapper);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisableRipple,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette\n} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatTab} from './tab';\nimport {MatTabHeader} from './tab-header';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nexport class MatTabGroupBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n\n  @ViewChild('tabHeader') _tabHeader: MatTabHeader;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef);\n    this._groupId = nextId++;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Clamp the next selected index to the boundsof 0 and the tabs length.\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    let indexToSelect = this._indexToSelect =\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\n      const tabChangeEvent = this._createChangeEvent(indexToSelect);\n      this.selectedTabChange.emit(tabChangeEvent);\n      // Emitting this value after change detection has run\n      // since the checked content may contain this variable'\n      Promise.resolve().then(() => this.selectedIndexChange.emit(indexToSelect));\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n      tab.isActive = index === indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const tabs = this._tabs.toArray();\n\n      // Maintain the previously-selected tab if a new tab is added or removed.\n      for (let i = 0; i < tabs.length; i++) {\n        if (tabs[i].isActive) {\n          // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n          // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n          // adding a tab within the `selectedIndexChange` event.\n          this._indexToSelect = this._selectedIndex = i;\n          break;\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(\n        ...this._tabs.map(tab => tab._disableChange),\n        ...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n    this._tabBodyWrapper.nativeElement.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabHeader, idx: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = idx;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple,\n  HasTabIndex,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, of as observableOf, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from '../ink-bar';\nimport {FocusMonitor} from '@angular/cdk/a11y';\n\n\n// Boilerplate for applying mixins to MatTabNav.\n/** @docs-private */\nexport class MatTabNavBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color', 'disableRipple'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavMixinBase\n    implements AfterContentChecked, AfterContentInit, CanColor, CanDisableRipple, OnDestroy {\n\n  /** Subject that emits when the component has been destroyed. */\n  private readonly _onDestroy = new Subject<void>();\n\n  private _activeLinkChanged: boolean;\n  private _activeLinkElement: ElementRef | null;\n\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n\n  /** Query list of all tab links of the tab navigation. */\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\n  _tabLinks: QueryList<MatTabLink>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  constructor(elementRef: ElementRef,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler) {\n    super(elementRef);\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @deletion-target 7.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(element: ElementRef) {\n    // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n    // @deletion-target 7.0.0\n    this._activeLinkChanged = !!element;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentInit(): void {\n    this._ngZone.runOutsideAngular(() => {\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\n\n      return merge(dirChange, this._viewportRuler.change(10))\n          .pipe(takeUntil(this._onDestroy))\n          .subscribe(() => this._alignInkBar());\n    });\n  }\n\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\n  ngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      const activeTab = this._tabLinks.find(tab => tab.active);\n\n      this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Aligns the ink bar to the active link. */\n  _alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.show();\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n}\n\n\n// Boilerplate for applying mixins to MatTabLink.\nexport class MatTabLinkBase {}\nexport const _MatTabLinkMixinBase =\n  mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n    '(click)': '_handleClick($event)'\n  }\n})\nexport class MatTabLink extends _MatTabLinkMixinBase\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Reference to the RippleRenderer for the tab-link. */\n  protected _tabLinkRipple: RippleRenderer;\n\n  /** Whether the ripples are globally disabled through the RippleGlobalOptions */\n  private _ripplesGloballyDisabled = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig = {};\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      this._ripplesGloballyDisabled;\n  }\n\n  constructor(private _tabNavBar: MatTabNav,\n              public _elementRef: ElementRef,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\n              @Attribute('tabindex') tabIndex: string,\n              /**\n               * @deprecated\n               * @deletion-target 7.0.0 `_focusMonitor` parameter to be made required.\n               */\n              private _focusMonitor?: FocusMonitor) {\n    super();\n\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (globalOptions) {\n      this._ripplesGloballyDisabled = !!globalOptions.disabled;\n      // TODO(paul): Once the speedFactor is removed, we no longer need to copy each single option.\n      this.rippleConfig = {\n        terminateOnPointerUp: globalOptions.terminateOnPointerUp,\n        speedFactor: globalOptions.baseSpeedFactor,\n        animation: globalOptions.animation,\n      };\n    }\n\n    if (_focusMonitor) {\n      _focusMonitor.monitor(_elementRef.nativeElement);\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabLinkRipple._removeTriggerEvents();\n\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n  }\n\n  /**\n   * Handles the click event, preventing default navigation if the tab link is disabled.\n   */\n  _handleClick(event: MouseEvent) {\n    if (this.disabled) {\n      event.preventDefault();\n    }\n  }\n}\n"],"names":["declarations","MatTabGroup","MatTabLabel","MatTab","MatInkBar","MatTabLabelWrapper","MatTabNav","MatTabLink","MatTabBody","MatTabBodyPortal","MatTabHeader","MatTabContent","MatTabsModule","__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","_MAT_INK_BAR_POSITIONER_FACTORY","element","left","offsetLeft","width","offsetWidth","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","factory","_elementRef","_ngZone","_inkBarPositioner","alignToElement","_this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","hide","positions","inkBar","type","Directive","args","selector","host","class","ElementRef","NgZone","undefined","decorators","Inject","templateRef","viewContainerRef","_super","call","tslib_1.__extends","TemplateRef","ViewContainerRef","CdkPortal","template","MatTabBase","_MatTabMixinBase","mixinDisabled","_viewContainerRef","textLabel","_contentPortal","_labelChange","Subject","_disableChange","position","origin","isActive","defineProperty","ngOnChanges","changes","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","_explicitContent","_implicitContent","Component","inputs","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","exportAs","propDecorators","ViewChild","Input","ariaLabel","ariaLabelledby","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","componentFactoryResolver","_host","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","ComponentFactoryResolver","forwardRef","CdkPortalOutlet","_dir","_onCentering","EventEmitter","_onCentered","_getLayoutDirection","dir","_origin","_onTranslateTabStarted","e","toState","emit","clientHeight","_onTranslateTabComplete","fromState","value","styles","animations","Output","_portalHost","PortalHostDirective","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","elementRef","focus","getOffsetLeft","getOffsetWidth","[class.mat-tab-disabled]","[attr.aria-disabled]","MatTabHeaderBase","_MatTabHeaderMixinBase","mixinDisableRipple","_changeDetectorRef","_viewportRuler","_scrollDistance","_selectedIndexChanged","_realignInkBar","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_selectedIndex","selectFocusedIndex","indexFocused","coerceNumberProperty","_keyManager","updateActiveItemIndex","ngAfterContentChecked","_tabLabelCount","_labelWrappers","length","_updatePagination","markForCheck","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","event","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","focusIndex","onKeydown","ngAfterContentInit","dirChange","change","observableOf","resize","realign","FocusKeyManager","withHorizontalOrientation","withWrap","merge","_onContentChanges","_checkPaginationEnabled","_isValidIndex","setActiveItem","_setTabFocus","index","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","v","Math","max","min","_getMaxScrollDistance","_scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","selectedLabelWrapper","selectedIndex","_inkBar","[class.mat-tab-header-pagination-controls-enabled]","[class.mat-tab-header-rtl]","ViewportRuler","Directionality","Optional","nextId","MatTabChangeEvent","MatTabGroupBase","_MatTabGroupMixinBase","mixinColor","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","coerceBooleanProperty","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_tabs","tabChangeEvent","_createChangeEvent","Promise","resolve","then","forEach","_subscribeToTabLabels","tabs","i","realignInkBar","_tabHeader","_focusChanged","apply","map","concat","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","idx","_getTabIndex","[class.mat-tab-group-dynamic-height]","[class.mat-tab-group-inverted-header]","dynamicHeight","MatTabNavBase","_MatTabNavMixinBase","_onDestroy","updateActiveLink","_activeLinkChanged","takeUntil","_alignInkBar","activeTab","_tabLinks","find","active","_activeLinkElement","ChangeDetectorRef","MatTabLinkBase","_MatTabLinkMixinBase","mixinTabIndex","_tabNavBar","_focusMonitor","_tabLinkRipple","setupTriggerEvents","parseInt","globalOptions","_ripplesGloballyDisabled","terminateOnPointerUp","speedFactor","baseSpeedFactor","animation","monitor","get","_isActive","enumerable","configurable","stopMonitoring","[attr.aria-current]","[attr.tabIndex]","[class.mat-tab-label-active]","(click)","Platform","MAT_RIPPLE_GLOBAL_OPTIONS","Attribute","FocusMonitor","NgModule","imports","CommonModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","A11yModule","exports"],"mappings":"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"}