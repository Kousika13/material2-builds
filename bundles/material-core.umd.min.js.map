{"version":3,"file":"material-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/disable-ripple.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/datetime/date-formats.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/line/line.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/option.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/testing/month-constants.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T,\n    defaultColor?: ThemePalette): Constructor<CanColor> & T {\n  return class extends base {\n    private _color: ThemePalette;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  /** Whether ripples are disabled. */\n  disableRipple: boolean;\n}\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\n    : Constructor<CanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n}\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : Constructor<HasTabIndex> & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs/Subject';\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState();\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: Constructor<CanUpdateErrorState> & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   */\n  useUtcForDisplay: boolean;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    // TODO(mmalerba): replace with checks from PLATFORM, logic currently duplicated to avoid\n    // breaking change from injecting the Platform.\n    const isBrowser = typeof document === 'object' && !!document;\n    const isIE = isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n    this.useUtcForDisplay = !isIE;\n    this._clampDate = isIE || (isBrowser && /(edge)/i.test(navigator.userAgent));\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {month: style});\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {weekday: style});\n      return range(7, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric'});\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      if (this.useUtcForDisplay) {\n        date = new Date(Date.UTC(\n            date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n            date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        displayFormat = {...displayFormat, timeZone: 'utc'};\n      }\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    let result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, supportsPassiveEventListeners} from '@angular/cdk/platform';\nimport {RippleRef, RippleState} from './ripple-ref';\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  /** @deprecated Use the animation property instead. */\n  speedFactor?: number;\n};\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * @docs-private\n */\nexport interface RippleTarget {\n  /** Configuration for ripples that are launched on pointer down. */\n  rippleConfig: RippleConfig;\n  /** Whether ripples on pointer down should be disabled. */\n  rippleDisabled: boolean;\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer {\n\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Events to be registered on the trigger element. */\n  private _triggerEvents = new Map<string, any>();\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /** Options that apply to all the event listeners that are bound by the renderer. */\n  private _eventOptions = supportsPassiveEventListeners() ? ({passive: true} as any) : false;\n\n  constructor(private _target: RippleTarget,\n              private _ngZone: NgZone,\n              elementRef: ElementRef,\n              platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown);\n      this._triggerEvents.set('mouseup', this.onPointerUp);\n      this._triggerEvents.set('mouseleave', this.onPointerUp);\n\n      this._triggerEvents.set('touchstart', this.onTouchStart);\n      this._triggerEvents.set('touchend', this.onPointerUp);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration / (config.speedFactor || 1);\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isPointerDown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(element: HTMLElement) {\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._ngZone.runOutsideAngular(() => {\n      this._triggerEvents.forEach((fn, type) =>\n          element.addEventListener(type, fn, this._eventOptions));\n    });\n\n    this._triggerElement = element;\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private onMousedown = (event: MouseEvent) => {\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private onTouchStart = (event: TouchEvent) => {\n    if (!this._target.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      this.fadeInRipple(\n          event.touches[0].clientX, event.touches[0].clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private onPointerUp = () => {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        this._triggerElement!.removeEventListener(type, fn, this._eventOptions);\n      });\n    }\n  }\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks');\n\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Whether we've already checked for HammerJs availability. */\n  private _hasCheckedHammer = false;\n\n  /** Reference to the global `document` object. */\n  private _document = typeof document === 'object' && document ? document : null;\n\n  /** Reference to the global 'window' object. */\n  private _window = typeof window === 'object' && window ? window : null;\n\n  constructor(@Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n  /** Whether any sanity checks are enabled */\n  private _areChecksEnabled(): boolean {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    return this._window && (this._window['__karma__'] || this._window['jasmine']);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    if (this._document && !this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    if (this._document && typeof getComputedStyle === 'function') {\n      const testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      const computedStyle = getComputedStyle(testElement);\n\n      // In some situations, the computed style of the test element can be null. For example in\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n      if (computedStyle && computedStyle.display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\n\n  /** Checks whether HammerJS is available. */\n  _checkHammerIsAvailable(): void {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n\n    if (this._areChecksEnabled() && !this._window['Hammer']) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE');\n\n/** Provider for MAT_DATE_LOCALE injection token. */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges= new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE_PROVIDER} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n    MAT_DATE_LOCALE_PROVIDER\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable()\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {\n  HammerStatic,\n  HammerInstance,\n  Recognizer,\n  RecognizerStatic,\n  HammerOptions,\n} from './gesture-annotations';\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\n\n/** Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  private _hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n  /** List of new event names to add to the gesture support list */\n  events: string[] = this._hammer ? [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ] : [];\n\n  constructor(\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\n    @Optional() commonModule?: MatCommonModule) {\n    super();\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new this._hammer(element, this._hammerOptions || undefined);\n\n    // Default Hammer Recognizers.\n    const pan = new this._hammer.Pan();\n    const swipe = new this._hammer.Swipe();\n    const press = new this._hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc as HammerInstance;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class MatLineSetter {\n  constructor(private _lines: QueryList<MatLine>, private _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n\n  private _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n\n  private _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n\n  private _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._element.nativeElement.classList.add(className);\n    } else {\n      this._element.nativeElement.classList.remove(className);\n    }\n  }\n\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\n\n/** Possible states for a ripple element. */\nexport enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple reference. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: RippleRenderer,\n    public element: HTMLElement,\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {RippleRef} from './ripple-ref';\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * Configuration for the animation duration of the ripples.\n   * There are two phases with different durations for the ripples.\n   */\n  animation?: RippleAnimationConfig;\n\n  /**\n   * If set, the default duration of the fade-in animation is divided by this value. For example,\n   * setting it to 0.5 will cause the ripple fade-in animation to take twice as long.\n   * A changed speedFactor will not affect the fade-out duration of the ripples.\n   * @deprecated Use the `animation` global option instead.\n   */\n  baseSpeedFactor?: number;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\n\n  /** Custom color for all ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether the ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * If set, the normal duration of ripple animations is divided by this value. For example,\n   * setting it to 0.5 will cause the animations to take twice as long.\n   * A changed speedFactor will not modify the fade-out duration of the ripples.\n   * @deprecated Use the [matRippleAnimation] binding instead.\n   */\n  @Input('matRippleSpeedFactor') speedFactor: number = 1;\n\n  /**\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\n   * duration of the ripples.\n   */\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  @Input('matRippleTrigger')\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\n  set trigger(trigger: HTMLElement) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _trigger: HTMLElement;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  /** Whether ripple directive is initialized and the input bindings are set. */\n  private _isInitialized: boolean = false;\n\n  constructor(private _elementRef: ElementRef,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions) {\n\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Launches a manual ripple at the specified position. */\n  launch(x: number, y: number, config?: RippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(x, y, {...this.rippleConfig, ...config});\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /** Ripple configuration from the directive's input values. */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {...this._globalOptions.animation, ...this.animation},\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n    };\n  }\n\n  /** Whether ripples on pointer-down are disabled or not. */\n  get rippleDisabled(): boolean {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the the trigger event listeners if ripples are enabled. */\n  private _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport * from './ripple';\nexport * from './ripple-ref';\nexport * from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\n\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <mat-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nexport class MatOptgroupBase { }\nexport const _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  styleUrls: ['optgroup.css'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {Subject} from 'rxjs/Subject';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  AfterViewChecked,\n} from '@angular/core';\nimport {MatOptgroup} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  styleUrls: ['option.css'],\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption implements AfterViewChecked {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _id = `mat-option-${_uniqueIdCounter++}`;\n  private _mostRecentViewValue = '';\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** The unique ID of the option. */\n  get id(): string { return this._id; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\n    @Optional() readonly group: MatOptgroup) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n  /**\n   * Counts the amount of option group labels that precede the specified option.\n   * @param optionIndex Index of the option at which to start counting.\n   * @param options Flat list of all of the options.\n   * @param optionGroups Flat list of all of the option groups.\n   */\n  static countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n    optionGroups: QueryList<MatOptgroup>): number {\n\n    if (optionGroups.length) {\n      let optionsArray = options.toArray();\n      let groups = optionGroups.toArray();\n      let groupCounter = 0;\n\n      for (let i = 0; i < optionIndex + 1; i++) {\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n    OCT = 9, NOV = 10, DEC = 11;\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","mixinDisabled","base","_super","class_1","args","_i","arguments","length","_this","apply","_disabled","tslib_1.__extends","defineProperty","value","coerceBooleanProperty","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","stateChanges","Subject","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","range","valueFunction","valuesArray","Array","i","enforceStyleRecalculation","element","window","getComputedStyle","getPropertyValue","distanceToFurthestCorner","x","y","rect","distX","Math","max","abs","left","right","distY","top","bottom","sqrt","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","n","call","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","InjectionToken","MatCommonModule","_sanityChecksEnabled","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","isDevMode","_isTestEnv","doctype","console","warn","testElement","createElement","body","appendChild","computedStyle","display","removeChild","_checkHammerIsAvailable","type","NgModule","imports","BidiModule","exports","providers","provide","useValue","undefined","decorators","Optional","Inject","MAT_DATE_LOCALE","MAT_DATE_LOCALE_PROVIDER","useExisting","LOCALE_ID","DateAdapter","_localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","long","short","narrow","ɵ0","String","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","NativeDateAdapter","matDateLocale","isBrowser","isIE","test","navigator","userAgent","useUtcForDisplay","_clampDate","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf_1","DateTimeFormat","month","_stripDirectionalityCharacters","format","Date","getDateNames","dtf_2","day","getDayOfWeekNames","dtf_3","weekday","getYearName","dtf","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","createDate","Error","result","today","parse","displayFormat","setFullYear","UTC","getHours","getMinutes","getSeconds","getMilliseconds","tslib_1.__assign","timeZone","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","obj","isNaN","getTime","NaN","slice","str","replace","Injectable","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","MatNativeDateModule","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MAT_HAMMER_OPTIONS","GestureConfig","_hammerOptions","commonModule","_hammer","Hammer","events","buildHammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","options","inheritances","recognizer","push","forEach","item","HammerGestureConfig","Directive","selector","host","class","MatLine","MatLineSetter","_lines","_element","_setLineClass","changes","subscribe","count","_resetClasses","_setClass","className","isAdd","declarations","MatLineModule","RippleRef","_renderer","config","state","RippleState","HIDDEN","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","RippleRenderer","_target","_ngZone","elementRef","platform","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","_eventOptions","supportsPassiveEventListeners","passive","onMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","onPointerUp","ripple","persistent","VISIBLE","_containerElement","set","containerRect","getBoundingClientRect","animationConfig","animation","centered","width","height","radius","offsetX","offsetY","duration","speedFactor","backgroundColor","transitionDuration","transform","rippleRef","FADING_IN","runTimeoutOutsideZone","delete","rippleEl","opacity","FADING_OUT","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_isInitialized","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","ngOnDestroy","launch","baseSpeedFactor","exportAs","[class.mat-ripple-unbounded]","ElementRef","NgZone","Platform","Input","unbounded","MatRippleModule","PlatformModule","Component","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","styles","template","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","MatPseudoCheckbox","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_labelId","MatOptgroup","inputs","role","[class.mat-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_changeDetectorRef","_parent","group","_selected","_active","_id","_mostRecentViewValue","onSelectionChange","EventEmitter","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","viewValue","_handleKeydown","keyCode","ENTER","SPACE","_selectViaInteraction","preventDefault","_getTabIndex","ngAfterViewChecked","emit","countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[class.mat-option-disabled]","(click)","(keydown)","propDecorators","Output","MatOptionModule","CommonModule","MAT_LABEL_GLOBAL_OPTIONS"],"mappings":"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"}