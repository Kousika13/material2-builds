{"version":3,"file":"material-tooltip.umd.min.js","sources":["../../src/lib/tooltip/tooltip.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/tooltip/tooltip-animations.ts","../../src/lib/tooltip/tooltip-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {\n  ConnectionPositionPair,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  ScrollDispatcher,\n  OverlayConnectionPosition,\n  OverlayRef,\n  RepositionScrollStrategy,\n  ScrollStrategy,\n  VerticalConnectionPos,\n  FlexibleConnectedPositionStrategy,\n} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {take} from 'rxjs/operators/take';\nimport {takeUntil} from 'rxjs/operators/takeUntil';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {matTooltipAnimations} from './tooltip-animations';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** CSS class that will be attached to the overlay panel. */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options');\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    '(longpress)': 'show()',\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class MatTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\n\n  private _portal: ComponentPortal<TooltipComponent>;\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        // TODO(andrewjs): When the overlay's position can be\n        // dynamically changed, do not destroy the tooltip.\n        this._detach();\n        this._updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay = this._defaultOptions.hideDelay;\n\n  private _message = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  private _manualListeners = new Map<string, Function>();\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: MatTooltipDefaultOptions) {\n\n    const element: HTMLElement = _elementRef.nativeElement;\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      this._manualListeners.set('mouseenter', () => this.show());\n      this._manualListeners.set('mouseleave', () => this.hide());\n\n      this._manualListeners\n        .forEach((listener, event) => _elementRef.nativeElement.addEventListener(event, listener));\n    } else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n      // will add some inline styles by default, including `user-select: none`. This is\n      // problematic on iOS, because it will prevent users from typing in inputs. If\n      // we're on iOS and the tooltip is attached on an input or textarea, we clear\n      // the `user-select` to avoid these issues.\n      element.style.webkitUserSelect = element.style.userSelect = '';\n    }\n\n    _focusMonitor.monitor(element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin !== 'program') {\n        _ngZone.run(() => this.show());\n      }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._manualListeners.forEach((listener, event) =>\n        this._elementRef.nativeElement.removeEventListener(event, listener));\n\n      this._manualListeners.clear();\n    }\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message) { return; }\n\n    const overlayRef = this._createOverlay();\n\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(this._position, delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions.touchendHideDelay);\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n    const direction = this._dir ? this._dir.value : 'ltr';\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n      .flexibleConnectedTo(this._elementRef)\n      .withFlexibleHeight(false)\n      .withFlexibleWidth(false)\n      .withViewportMargin(8)\n      .withPositions([\n        {...origin.main, ...overlay.main},\n        {...origin.fallback, ...overlay.fallback}\n      ]);\n\n    const scrollableAncestors = this._scrollDispatcher\n      .getAncestorScrollContainers(this._elementRef);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        } else {\n          // Otherwise recalculate the origin based on the new position.\n          this._tooltipInstance._setTransformOrigin(change.connectionPair, direction);\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction,\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position\n      .withPositions([\n        {...origin.main, ...overlay.main},\n        {...origin.fallback, ...overlay.fallback}\n      ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position == 'above' || position == 'below') {\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n    return {\n      main: originPosition,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position == 'above') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position == 'below') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n    return {\n      main: overlayPosition,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** The transform origin used in the animation for showing and hiding the tooltip */\n  _transformOrigin: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n\n  /** Current position of the tooltip. */\n  private _position: TooltipPosition;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  /** Stream that emits whether the user has a handset-sized display.  */\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _breakpointObserver: BreakpointObserver) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param position Position of the tooltip.\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._position = position;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  /** Sets the tooltip transform origin according to the position of the tooltip overlay. */\n  _setTransformOrigin(overlayPosition: ConnectionPositionPair, direction: Direction) {\n    const axis = (this._position === 'above' || this._position === 'below') ? 'Y' : 'X';\n    const position = axis == 'X' ? overlayPosition.overlayX : overlayPosition.overlayY;\n\n    if (position === 'top' || position === 'bottom') {\n      this._transformOrigin = position;\n    } else if (position === 'start') {\n      this._transformOrigin = direction === 'ltr' ? 'left' : 'right';\n    } else if (position === 'end') {\n      this._transformOrigin = direction === 'ltr' ? 'right' : 'left';\n    } else {\n      throw getMatTooltipInvalidPositionError(this._position);\n    }\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Animations used by MatTooltip. */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\n  MatTooltip,\n  TooltipComponent,\n} from './tooltip';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n    PlatformModule,\n    A11yModule,\n    LayoutModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [\n    MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500\n      }\n    }\n  ],\n})\nexport class MatTooltipModule {}\n"],"names":["getMatTooltipInvalidPositionError","position","Error","MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","SCROLL_THROTTLE_MS","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","matTooltipAnimations","tooltipState","trigger","state","style","transform","transition","animate","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER","provide","deps","Overlay","useFactory","MAT_TOOLTIP_DEFAULT_OPTIONS","MatTooltip","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","_scrollStrategy","_dir","_defaultOptions","_this","this","_position","_disabled","showDelay","hideDelay","_message","_manualListeners","Map","_destroyed","Subject","element","nativeElement","IOS","nodeName","webkitUserSelect","userSelect","set","show","hide","forEach","listener","event","addEventListener","monitor","pipe","takeUntil","subscribe","origin","run","defineProperty","value","_overlayRef","_detach","_updatePosition","coerceBooleanProperty","removeDescription","trim","_isTooltipVisible","_updateTooltipMessage","describe","message","_tooltipClass","_tooltipInstance","_setTooltipClass","ngOnDestroy","dispose","removeEventListener","clear","next","complete","stopMonitoring","delay","disabled","overlayRef","_createOverlay","_portal","ComponentPortal","TooltipComponent","attach","instance","afterHidden","toggle","isVisible","_handleKeydown","e","keyCode","ESCAPE","stopPropagation","_handleTouchend","touchendHideDelay","_getOrigin","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleHeight","withFlexibleWidth","withViewportMargin","withPositions","tslib_1.__assign","main","fallback","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","change","scrollableViewProperties","isOverlayClipped","_setTransformOrigin","connectionPair","create","positionStrategy","panelClass","scrollStrategy","detachments","hasAttached","detach","getConfig","originPosition","isLtr","originX","originY","_a","_invertPosition","x","y","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","asObservable","take","updatePosition","tooltipClass","type","Directive","args","selector","exportAs","host","(longpress)","(keydown)","(touchend)","ElementRef","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","undefined","decorators","Inject","Directionality","Optional","Input","_changeDetectorRef","_breakpointObserver","_visibility","_closeOnInteraction","_transformOrigin","_onHide","_isHandset","observe","Breakpoints","Handset","_hideTimeoutId","clearTimeout","_showTimeoutId","setTimeout","axis","_animationStart","_animationDone","toState","_handleBodyInteraction","markForCheck","Component","template","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","animations","aria-hidden","ɵ0","NgModule","imports","CommonModule","OverlayModule","MatCommonModule","PlatformModule","A11yModule","LayoutModule","exports","declarations","entryComponents","providers","useValue","MatTooltipModule"],"mappings":"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"}